on:
  push:
    branches:
      - main

name: Build master branch

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get next version
        uses: reecetech/version-increment@2022.2.4
        id: version
        with:
          scheme: semver
          increment: patch
    outputs:
      current-version: v${{ steps.version.outputs.version }}
  build:
    needs: version
    ## We want to define a strategy for our job
    strategy:
      ## this will contain a matrix of all of the combinations
      ## we wish to test again:
      matrix:
        go-version: ['1.17']
        platform: [ubuntu-latest, macos-latest, windows-latest]
    
    ## Defines the platform for each test run
    runs-on: ${{ matrix.platform }}
    
    ## the steps that will be run through for each version and platform
    ## combination
    steps:
    ## sets up go based on the version
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    ## checks out our code locally so we can work with the files
    - name: Checkout code
      uses: actions/checkout@v2
      with:  
        fetch-depth: 0
    
    - name: Build Windows
      if: matrix.platform == 'windows-latest'
      run: go build -v -o dist/go_get_dolar-${{ matrix.platform }}_${{ needs.version.outputs.current-version }}.exe . 
    - name: Build
      if: matrix.platform != 'windows-latest'
      run: go build -v -o dist/go_get_dolar-${{ matrix.platform }}_${{ needs.version.outputs.current-version }} . 

    - name: Upload Artifact Windows
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: go_get_dolar-${{ matrix.platform }}_${{ needs.version.outputs.current-version }}.exe
        path: dist/go_get_dolar-${{ matrix.platform }}_${{ needs.version.outputs.current-version }}.exe
    - name: Upload Artifact
      if: matrix.platform != 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: go_get_dolar-${{ matrix.platform }}_${{ needs.version.outputs.current-version }}
        path: dist/go_get_dolar-${{ matrix.platform }}_${{ needs.version.outputs.current-version }}
  release:
    runs-on: ubuntu-latest
    needs: 
      - version
      - build
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.version.outputs.current-version }}
          release_name: Release ${{ needs.version.outputs.current-version }}
          draft: false
          prerelease: false
      - name: Download Artifact windows-latest
        uses: actions/download-artifact@v3
        with:
          name: go_get_dolar-windows-latest_${{ needs.version.outputs.current-version }}.exe
          path: dist
      - name: Download Artifact macos-latest
        uses: actions/download-artifact@v3
        with:
          name: go_get_dolar-macos-latest_${{ needs.version.outputs.current-version }}
          path: dist
      - name: Download Artifact ubuntu-latest
        uses: actions/download-artifact@v3
        with:
          name: go_get_dolar-ubuntu-latest_${{ needs.version.outputs.current-version }}
          path: dist
      - name: Upload release binaries
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["/home/runner/work/go_dolar_get/go_dolar_get/dist/*"]'
