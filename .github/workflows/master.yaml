on:
  push:
    branches:
      - main

name: Build master branch

jobs:
  test:
    ## We want to define a strategy for our job
    strategy:
      ## this will contain a matrix of all of the combinations
      ## we wish to test again:
      matrix:
        go-version: ['1.17']
        platform: [ubuntu-latest, macos-latest, windows-latest]
    
    ## Defines the platform for each test run
    runs-on: ${{ matrix.platform }}
    
    ## the steps that will be run through for each version and platform
    ## combination
    steps:
    ## sets up go based on the version
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    ## checks out our code locally so we can work with the files
    - name: Checkout code
      uses: actions/checkout@v2
      with:  
        fetch-depth: 0
    
    - name: Build Windows
      if: matrix.os == 'windows-latest'
      run: go build -v -o dist/go_get_dolar-${{ matrix.platform }}.exe . 
    - name: Build
      if: matrix.os != 'windows-latest'
      run: go build -v -o dist/go_get_dolar-${{ matrix.platform }} . 
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #   with:
    #     tag_name: ${{ github.ref }}
    #     release_name: Release ${{ github.ref }}
    #     body: |
    #       Changes in this Release
    #       - First Change
    #       - Second Change
    #     draft: false
    #     prerelease: false
    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: dist/*

    - name: Version  
      id: version  
      uses: juliansangillo/tag-version@v1  
      with:  
        production-branch: main  
        test-branch: test  
        dev-branch: develop
